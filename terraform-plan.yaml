# Esto es la pipeline principal, así se aplica, sobre un plan de terraform (terraform-plan.yaml)

name: "Terraform Plan"

trigger: #Esto se traduciría como gatillo, por lo tanto se accionará cuando haya modificación en el principal (main) del repositorio
  branches:
    include:
      - main

pool: # Esto es la maquina que ejecuta los comandos de terraform
  vmImage: 'ubuntu-latest'

steps: # Estos son los pasos a seguir que hará cada tarea
- task: TerraformInstaller@0
  displayName: "Install Terraform" # Aquí se instala terraform
  inputs:
    terraformVersion: '1.4.6'
    terraformDownloadLocation: 'https://releases.hashicorp.com/terraform'


- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init' # Con este init, terraform inicializa el directorio y realiza comprobaciones para alojar el backend, de no tenerlo hay que importar recursos ya que aparecería error.
    workingDirectory: '$(System.DefaultWorkingDirectory)/Directorio' # directorio de trabajo referente a la raiz del repositorio hasta carpeta "Directorio"
    backendServiceArm: 'Suscripción de Azure 1(d26cf210-db93-4db7-9cea-d9ddce1cd55d)' #No es instalar terraform localmente, azure devops hace la conexión como servicio project settings>service connections> ahí aparece suscripción de azure 1 ( numero suscripcion)
    backendAzureRmResourceGroupName: 'dev1'
    backendAzureRmStorageAccountName: 'storageiesgn'
    backendAzureRmContainerName: 'contenedoriesgn1'
    backendAzureRmKey: 'terraform.tfstate'
  displayName: 'Terraform Init'

- task: TerraformTaskV4@4 
  inputs:
    provider: 'azurerm'
    command: 'plan' # Comando para ejecutar el archivo terraform plan
    workingDirectory: '$(System.DefaultWorkingDirectory)/Directorio'
    commandOptions: '-out=terraform.tfplan' # parametros que se le indican al comando que exporta el plan en un fichero y , el fichero se publica durante la ejecucion de la pipeline para poder leerlo, el fichero viene codificado interpretado por terraform, yo no lo puedo leer.
    environmentServiceNameAzureRM: 'Suscripción de Azure 1(d26cf210-db93-4db7-9cea-d9ddce1cd55d)'
  displayName: 'Terraform Plan' 

- task: PublishBuildArtifacts@1 # publicacion de un artefacto
  inputs:
    pathtoPublish: '$(Build.SourcesDirectory)/Directorio/terraform.tfplan'
    artifactName: 'terraformPlan'
    publishLocation: 'Container'
  displayName: 'Publish Terraform plan'

- template: terraform-apply.yaml #este parametro es para no continuar el codigo con el terraform aply, para tenerlo divido en varios ficheros, con TEMPLATES (Directorio) estamos haciendo referencia
# a este fichero terraform apply